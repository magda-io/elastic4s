name: release

run-name: Release - ${{ inputs.version }} on ${{ inputs.branch }}

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The release version"
        required: true
      branch:
        description: "The branch to release from"
        required: true
        default: 'opensearch'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: checkout the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Launch elastic docker
        run: docker run -d -it -p 39227:9200 -p 39337:9300 -e "discovery.type=single-node" -v /home/runner/work/elastic4s/elastic4s/elastic4s-tests/src/test/resources/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml docker.elastic.co/elasticsearch/elasticsearch:8.5.3

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v3
        with:
          gpg-private-key: ${{ secrets.PGP_SECRET }}
          passphrase: ${{ secrets.PGP_PASSPHRASE }}

      - name: GPG user IDs
        run: |
          echo "fingerprint: ${{ steps.import_gpg.outputs.fingerprint }}"
          echo "keyid:       ${{ steps.import_gpg.outputs.keyid }}"
          echo "name:        ${{ steps.import_gpg.outputs.name }}"
          echo "email:       ${{ steps.import_gpg.outputs.email }}"

      - name: publish 2.12 release
        run: sbt ++2.12.12 publishSigned
        env:
          RELEASE_VERSION: ${{ github.event.inputs.version }}
          OSSRH_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}

      - name: publish 2.13 release
        run: sbt ++2.13.4 publishSigned
        env:
          RELEASE_VERSION: ${{ github.event.inputs.version }}
          OSSRH_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}

      - name: publish 3.0 release
        run: sbt ++3.3.0 elastic4s-scala3/publishSigned
        env:
          RELEASE_VERSION: ${{ github.event.inputs.version }}
          OSSRH_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}

      - name: tag release
        run: |
          git tag v${{ github.event.inputs.version }}
          git push --tags
